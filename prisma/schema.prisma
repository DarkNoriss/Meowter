generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  email        String    @unique
  userlink     String    @unique
  bio          String?
  avatar       String
  createdAt    DateTime  @default(now())
  birthdayDate DateTime?
  meows        Meow[]
  replies      Reply[]
  likes        Like[]
}

model Meow {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  text      String
  likes     Like[]
  replies   Reply[]
}

model Like {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  user    User    @relation(fields: [userId], references: [id])
  userId  String  @db.ObjectId
  meow    Meow?   @relation(fields: [meowId], references: [id])
  meowId  String? @db.ObjectId
  reply   Reply?  @relation(fields: [replyId], references: [id])
  replyId String? @db.ObjectId
}

model Reply {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  meow      Meow     @relation(fields: [meowId], references: [id])
  meowId    String   @db.ObjectId
  text      String
  createdAt DateTime @default(now())
  likes     Like[]
}

// followers     User[]     @relation("Followers", references: [id])
// following     User[]     @relation("Following", references: [id])

// retweets   Tweet[]    @relation("Retweets", references: [id])
// replies    Tweet[]    @relation("Replies", references: [id])
